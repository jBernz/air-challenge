version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=boards_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d boards_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: express-backend
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/boards_db
    volumes:
      - ./backend/src:/app/src
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_BACKEND_URL=http://backend:3001
    container_name: next-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_BACKEND_URL=http://backend:3001
      - NEXT_PUBLIC_WS_URL=http://localhost:3001
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: